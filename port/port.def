/* Port definition */

////LAYOUT: 
////PERIPHERALS: SERIAL0 SERIAL1 SERIAL2 SERIAL3 SERIAL4 I2C0 SPI0 SPI1 PWMD0 ADC0 SD0 RTC0 CAN0
////CDEFINES: STM32L452xx ZER_STM32L4xxxx_1_6

const PinInfo const _vhalpinmap[] STORED = {
    /* MikroBus */
    /* D0   */ MAKE_PIN(PC,  2, HAS_EXT | HAS_ADC),              /* MikroBus AN */
    /* D1   */ MAKE_PIN(PD,  0, HAS_EXT),                        /* MikroBus RST */
    /* D2   */ MAKE_PIN(PB, 12, HAS_EXT),                        /* MikroBus CS */
    /* D3   */ MAKE_PIN(PB, 13, HAS_EXT | HAS_SPI),              /* MikroBus SCK */
    /* D4   */ MAKE_PIN(PB, 14, HAS_EXT | HAS_SPI | HAS_PWM),    /* MikroBus MISO */
    /* D5   */ MAKE_PIN(PB, 15, HAS_EXT | HAS_SPI | HAS_PWM),    /* MikroBus MOSI */
    /* D6   */ MAKE_PIN(PE,  9, HAS_EXT | HAS_PWM),              /* MikroBus PWM */
    /* D7   */ MAKE_PIN(PD, 15, HAS_EXT),                        /* MikroBus INT */
    /* D8   */ MAKE_PIN(PB, 10, HAS_EXT | HAS_SER | HAS_PWM),    /* MikroBus LPUART1 RX */
    /* D9   */ MAKE_PIN(PB, 11, HAS_EXT | HAS_SER | HAS_PWM),    /* MikroBus LPUART1 TX */
    /* D10  */ MAKE_PIN(PB,  6, HAS_EXT | HAS_I2C),              /* MikroBus SCL */
    /* D11  */ MAKE_PIN(PB,  7, HAS_EXT | HAS_I2C),              /* MikroBus SDA */

    /* ExtBus */
    /* D12  */ MAKE_PIN(PC,  7, HAS_EXT),                        /* Ext GPIO1 - USB VBUS DETECT */
    /* D13  */ MAKE_PIN(PD,  3, HAS_EXT),                        /* Ext GPIO2 */
    /* D14  */ MAKE_PIN(PD,  8, HAS_EXT | HAS_SER),              /* USART3 TX */
    /* D15  */ MAKE_PIN(PD,  9, HAS_EXT | HAS_SER),              /* USART3 RX */
    /* D16  */ MAKE_PIN(PA, 15, HAS_EXT | HAS_PWM),              /* Ext PWM */
    /* D17  */ MAKE_PIN(PC,  3, HAS_EXT | HAS_ADC),              /* Ext AN1 */
    /* D18  */ MAKE_PIN(PA,  5, HAS_EXT | HAS_ADC),              /* Ext DAC2 */
    /* D19  */ MAKE_PIN(PA,  4, HAS_EXT | HAS_ADC),              /* Ext DAC1 */

    /* Header 12x2 */

    /* Not Accessible */

    /* PA */
    /* D20  */ MAKE_PIN(PA,  0, HAS_EXT | HAS_PWM | HAS_ADC),    /* MCU Voltage Level */
    /* D21  */ MAKE_PIN(PA,  1, HAS_EXT | HAS_PWM | HAS_ADC),    /* MCU AIN1 */
    /* D22  */ MAKE_PIN(PA,  2, HAS_EXT | HAS_PWM),              /* MCU IN1 Out */
    /* D23  */ MAKE_PIN(PA,  3, HAS_EXT | HAS_PWM | HAS_ADC),    /* MCU AIN2 */
    /* D24  */ MAKE_PIN(PA,  6, HAS_EXT),                        /* MCU IO3 FLASH */
    /* D25  */ MAKE_PIN(PA,  7, HAS_EXT),                        /* MCU IO2 FLASH */
    /* D26  */ MAKE_PIN(PA,  8, HAS_EXT | HAS_PWM),              /* MCU CHRG PROG */
    /* D27  */ MAKE_PIN(PA,  9, HAS_EXT | HAS_SER),              /* MCU TX GPS */
    /* D28  */ MAKE_PIN(PA, 10, HAS_EXT | HAS_SER),              /* MCU RX GPS */
    /* D29  */ MAKE_PIN(PA, 11, HAS_EXT),                        /* USB DM */
    /* D30  */ MAKE_PIN(PA, 12, HAS_EXT),                        /* USB DP */
    /* D31  */ MAKE_PIN(PA, 13, HAS_EXT),                        /* DEBUG SWDIO */
    /* D32  */ MAKE_PIN(PA, 14, HAS_EXT),                        /* DEBUG SWCLK */

    /* PB */
    /* D33  */ MAKE_PIN(PB,  0, HAS_EXT),                        /* MCU IO1 FLASH */
    /* D34  */ MAKE_PIN(PB,  1, HAS_EXT),                        /* MCU IO0 FLASH */
    /* D35  */ MAKE_PIN(PB,  2, HAS_EXT),                        /* MCU LED RED */
    /* D36  */ MAKE_PIN(PB,  3, HAS_EXT),                        /* DEBUG SWO */
    /* D37  */ MAKE_PIN(PB,  4, HAS_EXT),                        /* MCU STATUS GSM */
    /* D38  */ MAKE_PIN(PB,  5, HAS_EXT),                        /* KILL GSM */
    /* D39  */ MAKE_PIN(PB,  8, HAS_EXT | HAS_CAN),              /* MCU CAN RX */
    /* D40  */ MAKE_PIN(PB,  9, HAS_EXT | HAS_CAN),              /* MCU CAN TX */

    /* PC */
    /* D41  */ MAKE_PIN(PC,  0, HAS_EXT | HAS_ADC),              /* MCU AIN3 */
    /* D42  */ MAKE_PIN(PC,  1, HAS_EXT | HAS_ADC),              /* MCU AIN4 */
    /* D43  */ MAKE_PIN(PC,  4, HAS_EXT | HAS_ADC),              /* MCU BATT ADC */
    /* D44  */ MAKE_PIN(PC,  5, HAS_EXT | HAS_ADC),              /* MCU IGNITION DET */
    /* D45  */ MAKE_PIN(PC,  6, HAS_EXT),                        /* MCU STANDBY GPS */
    /* D46  */ MAKE_PIN(PC,  8, HAS_EXT),                        /* MCU DAT0 SD */
    /* D47  */ MAKE_PIN(PC,  9, HAS_EXT),                        /* MCU DAT1 SD */
    /* D48  */ MAKE_PIN(PC, 10, HAS_EXT),                        /* MCU DAT2 SD */
    /* D49  */ MAKE_PIN(PC, 11, HAS_EXT),                        /* MCU DAT3 SD */
    /* D50  */ MAKE_PIN(PC, 12, HAS_EXT),                        /* MCU CLK SD */
    /* D51  */ MAKE_PIN(PC, 13, HAS_EXT),                        /* MCU POWER EN */
    /* D52  */ MAKE_PIN(PC, 14, HAS_EXT),                        /* OSC32 IN */
    /* D53  */ MAKE_PIN(PC, 15, HAS_EXT),                        /* OSC32 OUT */

    /* PD */
    /* D54  */ MAKE_PIN(PD,  1, HAS_EXT),                        /* MCU RING GSM */
    /* D55  */ MAKE_PIN(PD,  2, HAS_EXT),                        /* MCU CMD SD */
    /* D56  */ MAKE_PIN(PD,  4, HAS_EXT),                        /* MCU CHRG STAT */
    /* D57  */ MAKE_PIN(PD,  5, HAS_EXT | HAS_SER),              /* MCU TX GSM */
    /* D58  */ MAKE_PIN(PD,  6, HAS_EXT | HAS_SER),              /* MCU RX GSM */
    /* D59  */ MAKE_PIN(PD,  7, HAS_EXT),                        /* MCU RESET PS */
    /* D60  */ MAKE_PIN(PD, 10, HAS_EXT),                        /* MCU CS ACC */
    /* D61  */ MAKE_PIN(PD, 11, HAS_EXT),                        /* MCU INT1 ACC */
    /* D62  */ MAKE_PIN(PD, 12, HAS_EXT),                        /* MCU RANGE IN4 */
    /* D63  */ MAKE_PIN(PD, 13, HAS_EXT),                        /* MCU LED 1 */
    /* D64  */ MAKE_PIN(PD, 14, HAS_EXT),                        /* MCU RANGE IN3 */

    /* PE */
    /* D65  */ MAKE_PIN(PE,  0, HAS_EXT | HAS_PWM),              /* MCU IN2 OUT */
    /* D66  */ MAKE_PIN(PE,  1, HAS_EXT),                        /* MCU CAN1 S */
    /* D67  */ MAKE_PIN(PE,  2, HAS_EXT),                        /* MCU PWR MODEM */
    /* D68  */ MAKE_PIN(PE,  3, HAS_EXT),                        /* MCU WAKE GSM */
    /* D69  */ MAKE_PIN(PE,  4, HAS_EXT | HAS_PWM),              /* MCU BATT EN */
    /* D70  */ MAKE_PIN(PE,  5, HAS_EXT | HAS_PWM),              /* MCU +5V EN */
    /* D71  */ MAKE_PIN(PE,  6, HAS_EXT | HAS_PWM),              /* MCU SOS */
    /* D72  */ MAKE_PIN(PE,  7, HAS_EXT),                        /* MCU RANGE IN2 */
    /* D73  */ MAKE_PIN(PE,  8, HAS_EXT),                        /* MCU RANGE IN1 */
    /* D74  */ MAKE_PIN(PE, 10, HAS_EXT),                        /* MCU SCK FLASH */
    /* D75  */ MAKE_PIN(PE, 11, HAS_EXT),                        /* MCU NCS FLASH */
    /* D76  */ MAKE_PIN(PE, 12, HAS_EXT),                        /* MCU CSB OUT */
    /* D77  */ MAKE_PIN(PE, 13, HAS_EXT | HAS_SPI),              /* MCU SCLK SPI */
    /* D78  */ MAKE_PIN(PE, 14, HAS_EXT | HAS_SPI),              /* MCU MISO SPI */
    /* D79  */ MAKE_PIN(PE, 15, HAS_EXT | HAS_SPI),              /* MCU MOSI SPI */

    /* PH */
    /* D80  */ MAKE_PIN(PH,  3, HAS_EXT),                        /* MCU ANTON BOOT0 */
};

const PinClass const _analogclass[] STORED = {
    /* A0  */ MAKE_PIN_CLASS(0, 3, 0, 0),
    /* A1  */ MAKE_PIN_CLASS(17, 4, 0, 0),
    /* A2  */ MAKE_PIN_CLASS(18, 10, 0, 0),
    /* A3  */ MAKE_PIN_CLASS(19, 9, 0, 0),
    /* A4  */ MAKE_PIN_CLASS(20, 5, 0, 0),
    /* A5  */ MAKE_PIN_CLASS(21, 6, 0, 0),
    /* A6  */ MAKE_PIN_CLASS(23, 8, 0, 0),
    /* A7  */ MAKE_PIN_CLASS(41, 1, 0, 0),
    /* A8  */ MAKE_PIN_CLASS(42, 2, 0, 0),
    /* A9  */ MAKE_PIN_CLASS(43, 13, 0, 0),
    /* A10 */ MAKE_PIN_CLASS(44, 14, 0, 0),
};

const PinClass const _spiclass[] STORED = {
    /* pin_num, spi, alternate fn */
    /* MOSI0 */ MAKE_PIN_CLASS( 5, 2, 5, 0),
    /* MISO0 */ MAKE_PIN_CLASS( 4, 2, 5, 0),
    /* SCK0  */ MAKE_PIN_CLASS( 3, 2, 5, 0),
    /* MOSI1 */ MAKE_PIN_CLASS(79, 1, 5, 0),
    /* MISO1 */ MAKE_PIN_CLASS(78, 1, 5, 0),
    /* SCK1  */ MAKE_PIN_CLASS(77, 1, 5, 0),
};

const PinClass const _i2cclass[] STORED = {
    /* pin_num, i2c, alternate fn */
    /* SDA0 */ MAKE_PIN_CLASS(11, 1, 4, 0),
    /* SCL0 */ MAKE_PIN_CLASS(10, 1, 4, 0),
};

const PinClass const _pwmclass[] STORED = {
    /* pin_num, tid(0=TIM1,1=TIM2,2=TIM3,3=TIM6,4=TIM15,5=TIM16), alt fn, channel */
    /* PWM0  */ MAKE_PIN_CLASS(4, 4, 14, 1),
    /* PWM1  */ MAKE_PIN_CLASS(5, 4, 14, 2),
    /* PWM2  */ MAKE_PIN_CLASS(6, 0, 1, 1),
    /* PWM3  */ MAKE_PIN_CLASS(8, 1, 1, 3),
    /* PWM4  */ MAKE_PIN_CLASS(9, 1, 1, 4),
    /* PWM5  */ MAKE_PIN_CLASS(16, 1, 1, 1),
    /* PWM6  */ MAKE_PIN_CLASS(20, 1, 1, 1),
    /* PWM7  */ MAKE_PIN_CLASS(21, 1, 1, 2),
    /* PWM8  */ MAKE_PIN_CLASS(23, 1, 1, 4),
    /* PWM9  */ MAKE_PIN_CLASS(26, 0, 1, 1),
    /* PWM10 */ MAKE_PIN_CLASS(69, 2, 2, 2),
    /* PWM11 */ MAKE_PIN_CLASS(70, 2, 2, 3),
    /* PWM12 */ MAKE_PIN_CLASS(71, 2, 2, 4),
    /* PWM13 */ MAKE_PIN_CLASS(22, 4, 14, 1),
    /* PWM14 */ MAKE_PIN_CLASS(65, 5, 14, 1),
};


const PinClass const _icuclass[] STORED = {
};

const PinClass const _canclass[] STORED = {
    /* pin_num, usart, alternate fn */
    /* CANRX0 */ MAKE_PIN_CLASS(39, 0, 9, 0),
    /* CANTX0 */ MAKE_PIN_CLASS(40, 0, 9, 0),
};

const PinClass const _serclass[] STORED = {
    /* pin_num, usart, alternate fn */
    /* RX0 */ MAKE_PIN_CLASS(29, 6, 10, 0),
    /* TX0 */ MAKE_PIN_CLASS(30, 6, 10, 0),
    /* RX1 */ MAKE_PIN_CLASS(8, 5, 8, 0),
    /* TX1 */ MAKE_PIN_CLASS(9, 5, 8, 0),
    /* RX2 */ MAKE_PIN_CLASS(15, 3, 7, 0),
    /* TX2 */ MAKE_PIN_CLASS(14, 3, 7, 0),
    /* RX3 */ MAKE_PIN_CLASS(58, 2, 7, 0),
    /* TX3 */ MAKE_PIN_CLASS(57, 2, 7, 0),
    /* RX4 */ MAKE_PIN_CLASS(28, 1, 7, 0),
    /* TX4 */ MAKE_PIN_CLASS(27, 1, 7, 0),
};

const PinClass const _dacclass[] STORED = {
};

const PinClass const _ledclass[] STORED = {
    /* LED0 */ MAKE_PIN_CLASS(35, 0, 0, 0),
    /* LED1 */ MAKE_PIN_CLASS(63, 0, 0, 0),
};

const PinClass const _btnclass[] STORED = {
};



